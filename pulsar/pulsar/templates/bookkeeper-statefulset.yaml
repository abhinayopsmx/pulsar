---
# Source: pulsar/templates/bookkeeper-statefulset.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "pulsar-bookie"
  namespace: default
  labels:
    app: pulsar
    chart: pulsar-2.9.3
    release: pulsar
    heritage: Helm
    cluster: pulsar
    component: bookie
spec:
  serviceName: "pulsar-bookie"
  replicas: 1
  selector:
    matchLabels:
      app: pulsar
      release: pulsar
      component: bookie
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: pulsar
        release: pulsar
        cluster: pulsar
        component: bookie
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
    spec:
      affinity:
        podAntiAffinity:
          
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: "app"
                operator: In
                values:
                - "pulsar"
              - key: "release"
                operator: In
                values:
                - pulsar
              - key: "component"
                operator: In
                values:
                - bookie
            topologyKey: "kubernetes.io/hostname"
        
      terminationGracePeriodSeconds: 30
      initContainers:
      # This initContainer will wait for bookkeeper initnewcluster to complete
      # before deploying the bookies
      - name: pulsar-bookkeeper-verify-clusterid
        image: "hp3v-docker-np.oneartifactoryprod.verizon.com/apachepulsar-all:v2.9.3"
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c"]
        args:
        # only reformat bookie if bookkeeper is running without persistence
        - >
          
          set -e;
          bin/apply-config-from-env.py conf/bookkeeper.conf;until bin/bookkeeper shell whatisinstanceid; do
            sleep 3;
          done;
        envFrom:
        - configMapRef:
            name: "pulsar-bookie"
        volumeMounts:
        
      containers:
      - name: "pulsar-bookie"
        image: "hp3v-docker-np.oneartifactoryprod.verizon.com/apachepulsar-all:v2.9.3"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/v1/bookie/state
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 60
        readinessProbe:
          httpGet:
            path: /api/v1/bookie/is_ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 60
        resources:
          limits:
            cpu: 0.5
            memory: 1024Mi
          requests:
            cpu: 0.2
            memory: 512Mi
        command: ["sh", "-c"]
        args:
        - >
          bin/apply-config-from-env.py conf/bookkeeper.conf;
          
          OPTS="${OPTS} -Dlog4j2.formatMsgNoLookups=true" exec bin/pulsar bookie;
        ports:
        - name: "bookie"
          containerPort: 3181
        - name: http
          containerPort: 8000
        envFrom:
        - configMapRef:
            name: "pulsar-bookie"
        volumeMounts:
        - name: "pulsar-bookie-journal"
          mountPath: /pulsar/data/bookkeeper/journal
        - name: "pulsar-bookie-ledgers"
          mountPath: /pulsar/data/bookkeeper/ledgers
        
      volumes:
      
      
  volumeClaimTemplates:
  - metadata:
      name: "pulsar-bookie-journal"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
  - metadata:
      name: "pulsar-bookie-ledgers"
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 20Gi
